---
apiVersion: v1
kind: Namespace
metadata:
  name: appmesh-ns
  labels:
    mesh: my-mesh
    appmesh.k8s.aws/sidecarInjectorWebhook: enabled
  
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: Mesh
metadata:
  name: appmesh
spec:
  namespaceSelector:
    matchLabels:
      mesh: my-mesh
  
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: nginx
  namespace: appmesh-ns
spec:
  awsName: nginx_appmesh-ns
  podSelector:
    matchLabels:
       app: nginx
  listeners:
    - portMapping:
        port: 3000
        protocol: http
  serviceDiscovery:
    #cloudMap:
    #  namespaceName:
    #  serviceName:
    dns:
      hostname: nginx.appmesh-ns.svc.cluster.local
  backends:
    - virtualService:
        virtualServiceRef:
          name: php

---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: php
  namespace: appmesh-ns
spec:
  awsName: php_appmesh-ns
  podSelector:
     matchLabels:
       app: php
  listeners:
    - portMapping:
        port: 9000
        protocol: http
  serviceDiscovery:
    #cloudMap:
    #  namespaceName:
    #  serviceName:
    dns:
      hostname: php.appmesh-ns.svc.cluster.local
  #logging:
  #  accessLog:
  #    file:
  #      path: /dev/stdout
 
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualRouter
metadata:
  namespace: appmesh-ns
  name: nginx-virtual-router
spec:
  listeners:
    - portMapping:
        port: 3000
        protocol: http
  routes:
    - name: my-service-a-route
      httpRoute:
        match:
          prefix: /
        action:
          weightedTargets:
            - virtualNodeRef:
                name: nginx
              weight: 1

---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualRouter
metadata:
  namespace: appmesh-ns
  name: php-virtual-router
spec:
  listeners:
    - portMapping:
        port: 9000
        protocol: http
  routes:
    - name: my-service-a-route
      httpRoute:
        match:
          prefix: /
        action:
          weightedTargets:
            - virtualNodeRef:
                name: php
              weight: 1
              
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualService
metadata:
  name: nginx
  namespace: appmesh-ns
spec:
  awsName: nginx.appmesh-ns.svc.cluster.local
  provider:
    #virtualNode:
    #  virtualNodeRef:
    #    name: nginx
    virtualRouter:
      virtualRouterRef:
        name: nginx-virtual-router
             
              
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualService
metadata:
  name: php
  namespace: appmesh-ns
spec:
  awsName: php.appmesh-ns.svc.cluster.local
  provider:
    #virtualNode:
    #  virtualNodeRef:
    #     name: php
    virtualRouter:
      virtualRouterRef:
        name: php-virtual-router
 
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::080266302756:role/aws-workload-role
  namespace: appmesh-ns
  name: appmesh-sa
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: appmesh-ns
data:
  php.conf: |
    upstream php {
     server php.appmesh-ns.svc.cluster.local:9000;
    }
    server {
    listen 3000;
    root /var/www/html;
    location / {
        index index.php index.html;
    }
    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass php;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
    }
    }
  index.php: |
    <html>
     <head>
      <title>PHP Test</title>
     </head>
     <body>
     <?php echo '<p>Hello World</p>'; ?> 
     </body>
    </html>
    
  
    
  #nginx.conf: |
  #  server{ 
  #    listen 5000;
  #    root /var/www/html;
  #    location / {
  #       index index.html;
  #    }
  #  }
  #index.html: |
  #  <h1> Welcome To Nginx </h1>
  #  <h2> <a href="/grafana">Grafana</a> </h2>
   
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: appmesh-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      serviceAccountName: appmesh-sa
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 3000
        volumeMounts:
          - name: nginx
            mountPath: /etc/nginx/conf.d 
            readOnly: true
            
          - name: index
            mountPath: /var/www/html
            readOnly: true
            
      volumes:
          - name: nginx
            configMap:
              name: nginx-conf
              items:
              - key: php.conf 
                path: php.conf
          - name: index 
            configMap:
               name: nginx-conf
               items:
               - key: index.php 
                 path: index.php
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: appmesh-ns
  labels:
    app: nginx
spec:
  type: ClusterIP
  selector:
    app: nginx
  ports:
    - name: grafana
      protocol: TCP
      port: 3000
      targetPort: 3000
    

--- 

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: php
  namespace: appmesh-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: php
  template:
    metadata:
      labels:
        app: php
    spec:
      serviceAccountName: appmesh-sa
      containers:
      - name: php
        image: php:fpm-alpine
        ports:
        - containerPort: 9000
        volumeMounts:
          - name: index
            mountPath: /var/www/html
            readOnly: true
            
      volumes:
          - name: index
            configMap:
              name: nginx-conf
              items:
              - key: index.php 
                path: index.php

---
apiVersion: v1
kind: Service
metadata:
  name: php
  namespace: appmesh-ns
  labels:
    app: php
spec:
  type: ClusterIP
  selector:
    app: php
  ports:
    - name: php
      protocol: TCP
      port: 9000
      targetPort: 9000
    
--- 
# curl localhost:9901/stats | grep connected_state
# curl -s http://localhost:9901/server_info | cut -d' ' -f3 | grep -q live

